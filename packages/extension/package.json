{
  "name": "legend-engine-ide-client-vscode",
  "private": true,
  "type": "commonjs",
  "displayName": "Legend",
  "description": "Legend Language Support (parse, compile, execute)",
  "repository": {
    "type": "git",
    "url": "https://github.com/finos/legend-engine-ide-client-vscode.git"
  },
  "categories": [
    "Programming Languages",
    "Linters",
    "Other"
  ],
  "keywords": [
    "notebookRenderer"
  ],
  "installConfig": {
    "hoistingLimits": "dependencies"
  },
  "icon": "icons/legend_full.png",
  "homepage": "https://legend.finos.org/",
  "publisher": "FINOS",
  "version": "0.21.3",
  "engines": {
    "vscode": "^1.90.0"
  },
  "contributes": {
    "viewsContainers": {
      "panel": [
        {
          "id": "resultsViewContainer",
          "title": "Results",
          "icon": ""
        }
      ],
      "activitybar": [
        {
          "id": "legend-activity-bar-menu",
          "title": "Legend",
          "icon": "./icons/legend.svg"
        }
      ]
    },
    "views": {
      "legend-activity-bar-menu": [
        {
          "id": "legendConceptTree",
          "name": "Concept Tree"
        }
      ],
      "resultsViewContainer": [
        {
          "id": "executionView",
          "name": "Execution"
        },
        {
          "type": "webview",
          "id": "resultsView",
          "name": "Results"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "executionView",
        "contents": "No executions",
        "when": "!showExecutionResults"
      },
      {
        "view": "executionView",
        "contents": "Execution in progress...",
        "when": "isExecutionHappening"
      },
      {
        "view": "legendConceptTree",
        "contents": "[Load](command:legend.conceptTree.refresh) Legend concepts."
      }
    ],
    "commands": [
      {
        "command": "legend.show.diagram",
        "title": "View/Edit Diagram",
        "icon": "$(graph-line)",
        "category": "Legend"
      },
      {
        "command": "legend.editInQueryBuilder",
        "title": "Edit/Execute in QueryBuilder",
        "icon": "$(search)",
        "category": "Legend"
      },
      {
        "command": "legend.refresh.query.builder",
        "title": "Refresh Query Builder",
        "category": "Legend"
      },
      {
        "command": "legend.log",
        "title": "Show Legend Server logs",
        "category": "Legend"
      },
      {
        "command": "legend.report",
        "title": "View Pure Compatibility Testing (PCT) Report",
        "category": "Legend"
      },
      {
        "command": "legend.extension.output",
        "title": "Show Extension Output",
        "category": "Legend"
      },
      {
        "command": "legend.reload",
        "title": "Reload Extension",
        "category": "Legend"
      },
      {
        "command": "legend.conceptTree.show",
        "title": "Show In Concept Tree",
        "category": "Legend"
      },
      {
        "command": "legend.conceptTree.navigate",
        "title": "GoTo",
        "icon": "$(go-to-file)"
      },
      {
        "command": "legend.conceptTree.focusOnElement",
        "title": "Focus Current Concept",
        "icon": "$(target)"
      },
      {
        "command": "legend.conceptTree.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "legend.refactor.oneEntityPerFile",
        "title": "One Entity Per File Refactoring",
        "icon": "$(type-hierarchy)"
      },
      {
        "command": "legend.createNotebook",
        "title": "Create Legend REPL Notebook",
        "icon": "$(repl)",
        "enablement": "workspaceFolderCount > 0",
        "category": "Legend"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Legend Language Config",
      "properties": {
        "showExecutionResults": {
          "type": "boolean",
          "default": false,
          "description": "Indicates if we have to show execution results in panel"
        },
        "isExecutionHappening": {
          "type": "boolean",
          "default": false,
          "description": "Indicates if we have to show execution is happening"
        },
        "legend.agGridLicense": {
          "type": "string",
          "default": "",
          "description": "Set the AgGrid License to enable enterprise features.  Without a licence, only community features are available"
        },
        "legend.extensions.dependencies.pom": {
          "type": "string",
          "default": "",
          "description": "Defines the POM to use to determine the runtime dependencies of the language server.  When not provided, a default POM is used for this purpose"
        },
        "legend.extensions.other.dependencies": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "(?<groupId>[^:]+):(?<artifatcId>[^:]+):(?<version>[^:]+)",
            "description": "Dependency in GAV foramt"
          },
          "default": [],
          "description": "Other dependencies in GAV format to be added to the classpath after classpath constructed from POM"
        },
        "legend.engine.server.url": {
          "type": "string",
          "default": "",
          "description": "Set the engine server url to eneable some features that required the remote server"
        },
        "legend.engine.server.remoteExecution": {
          "type": "boolean",
          "default": "true",
          "description": "Defines if executions should happen locally or remotely.  Only used if server url is provided."
        },
        "legend.sdlc.server.url": {
          "type": "string",
          "default": "",
          "description": "Set the SDLC server url to eneable auto update of platform versions"
        },
        "legend.language.server.vmargs": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string",
            "description": "Individual extra VM argument for Legend Language Server"
          },
          "description": "Specifies extra VM arguments used to launch the Legend Language Server"
        },
        "legend.language.repl.vmargs": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string",
            "description": "Individual extra VM argument for Legend Language REPL"
          },
          "description": "Specifies extra VM arguments used to launch the Legend Language REPL"
        },
        "legend.studio.forms.file": {
          "type": "string",
          "default": "",
          "description": "Specifies file to be used for legend studio web forms"
        },
        "legend.planExecutor.configuration": {
          "type": "string",
          "default": "",
          "description": "Defines the path to the plan executor configuration JSON"
        },
        "legend.protocol.version": {
          "type": "string",
          "default": "vX_X_X",
          "description": "Defines the protocol version to use"
        },
        "legend.purebook.enableDataCube": {
          "type": "boolean",
          "default": true,
          "description": "Show purebook execution relation results in DataCube"
        }
      }
    },
    "languages": [
      {
        "id": "legend",
        "extensions": [
          ".pure"
        ],
        "icon": {
          "dark": "./icons/legend.svg",
          "light": "./icons/legend.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "legend",
        "scopeName": "source.legend",
        "path": "./legend.tmlanguage"
      }
    ],
    "terminal": {
      "profiles": [
        {
          "id": "legend.terminal.repl",
          "title": "Legend REPL"
        }
      ]
    },
    "menus": {
      "view/item/context": [
        {
          "command": "legend.conceptTree.navigate",
          "when": "view == legendConceptTree && viewItem != package",
          "group": "inline"
        },
        {
          "command": "legend.show.diagram",
          "when": "view == legendConceptTree && viewItem == meta::pure::metamodel::diagram::Diagram",
          "group": "inline"
        },
        {
          "command": "legend.editInQueryBuilder",
          "when": "view == legendConceptTree && (viewItem == meta::legend::service::metamodel::Service || viewItem == meta::pure::metamodel::function::ConcreteFunctionDefinition)",
          "group": "inline"
        }
      ],
      "view/title": [
        {
          "command": "legend.conceptTree.focusOnElement",
          "when": "view == legendConceptTree",
          "group": "navigation"
        },
        {
          "command": "legend.conceptTree.refresh",
          "when": "view == legendConceptTree",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "group": "Legend",
          "submenu": "legend.editor.context",
          "when": "editorTextFocus && editorLangId == legend"
        }
      ],
      "legend.editor.context": [
        {
          "group": "Legend",
          "command": "legend.conceptTree.show"
        }
      ]
    },
    "submenus": [
      {
        "id": "legend.editor.context",
        "label": "Legend"
      }
    ],
    "keybindings": [
      {
        "command": "legend.conceptTree.show",
        "key": "ctrl+shift+l",
        "mac": "shift+cmd+l"
      }
    ],
    "notebooks": [
      {
        "type": "legend-book",
        "displayName": "Legend Notebook",
        "selector": [
          {
            "filenamePattern": "*.purebook"
          }
        ]
      }
    ],
    "notebookRenderer": [
      {
        "id": "legend-cube-renderer",
        "displayName": "Legend Cube Renderer",
        "entrypoint": "./dist/PurebookRendererRoot.js",
        "mimeTypes": [
          "application/legend-datacube"
        ],
        "requiresMessaging": "always"
      }
    ]
  },
  "capabilities": {
    "codeLensProvider": {
      "resolveProvider": true
    }
  },
  "scripts": {
    "test": "yarn compile && yarn node ./lib/__tests__/runTest.js",
    "compile": "tsc -b",
    "dev:webpack": "webpack --mode development --watch",
    "webpack": "webpack --mode development",
    "webpack:package": "webpack --mode production --devtool hidden-source-map",
    "check:copyright": "license-check-and-add check -f ../../license-check-and-add-config.json",
    "check:format": "prettier --list-different \"(src|scripts|docs)/**/*.{md,json,mjs,cjs,js,ts,tsx,html,scss,css}\"",
    "check:ci": "yarn check:format && yarn check:copyright",
    "lint": "yarn lint:js && yarn lint:style",
    "lint:ci": "yarn lint:js --max-warnings=0 && yarn lint:style --max-warnings=0",
    "lint:js": "cross-env eslint --cache --cache-location ./build/.eslintcache --report-unused-disable-directives --parser-options=project:\"./tsconfig.json\" \"./src/**/*.{js,ts,tsx}\"",
    "lint:style": "stylelint --allow-empty-input --cache --cache-location ./build/.stylelintcache \"style/**/*.{scss,css}\" \"style/scss/**/*.scss\"",
    "fix:format": "prettier --write \"(src|scripts|docs)/**/*.{md,json,mjs,cjs,js,ts,tsx,html,scss,css}\"",
    "mvn:downloadServerJar": "yarn node ./scripts/maven/downloadLspServerJar.js",
    "mvn:updateEngineVersion": "yarn node ./scripts/maven/updateEngineVersion.js",
    "mvn:prepare": "yarn mvn:downloadServerJar && yarn mvn:updateEngineVersion",
    "version": "yarn version"
  },
  "dependencies": {
    "@finos/legend-engine-ide-client-vscode-shared": "workspace:*",
    "@finos/legend-vscode-extension-dependencies": "4.0.57",
    "glob": "11.0.0",
    "path": "0.12.7",
    "serializr": "3.0.3",
    "vscode-languageclient": "9.0.1"
  },
  "devDependencies": {
    "@eslint/compat": "^1.2.4",
    "@eslint/js": "9.17.0",
    "@types/mocha": "10.0.1",
    "@types/sinon": "17.0.3",
    "@types/vscode": "1.83.0",
    "@typescript-eslint/eslint-plugin": "8.18.1",
    "@typescript-eslint/parser": "8.18.1",
    "@vscode/test-cli": "0.0.4",
    "@vscode/test-electron": "2.3.9",
    "assert": "2.1.0",
    "console-browserify": "1.2.0",
    "cross-env": "7.0.3",
    "crypto-browserify": "3.12.0",
    "css-loader": "7.1.2",
    "eslint": "9.17.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-import": "2.31.0",
    "eslint-plugin-prettier": "5.2.1",
    "license-check-and-add": "4.0.5",
    "maven": "5.0.0",
    "mocha": "10.2.0",
    "npm-run-all": "4.1.5",
    "postcss-scss": "4.0.9",
    "prettier": "3.4.2",
    "process": "0.11.10",
    "sass": "^1.83.1",
    "sass-loader": "14.0.0",
    "sinon": "17.0.1",
    "stream-browserify": "3.0.0",
    "style-loader": "1.2.1",
    "stylelint": "16.12.0",
    "ts-loader": "9.5.1",
    "typescript": "5.7.2",
    "util": "0.12.5",
    "vm-browserify": "1.1.2",
    "webpack": "5.97.1",
    "webpack-cli": "5.1.4"
  },
  "main": "./dist/extension",
  "activationEvents": [
    "onLanguage:legend",
    "workspaceContains:**/*.pure"
  ]
}
